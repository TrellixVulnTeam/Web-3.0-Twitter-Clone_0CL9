{"ast":null,"code":"var _jsxFileName = \"/Users/Agnesia/Projects/Web-3.0-Twitter-Clone/src/components/TweetInFeed.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/alt-text */\nimport React from 'react';\nimport './TweetInFeed.css';\nimport { defaultImgs } from '../defaultimgs';\nimport { Icon } from 'web3uikit';\nimport { useMoralis } from 'react-moralis';\nimport { useState, useEffect } from 'react';\nimport { get } from 'https-browserify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TweetInFeed = _ref => {\n  _s();\n\n  let {\n    profile\n  } = _ref;\n  const [tweetArr, setTweetArr] = useState();\n  const {\n    Moralis,\n    account\n  } = useMoralis();\n  useEffect(() => {\n    async function getTweets() {\n      try {\n        const Tweets = Moralis.Object.extend('Tweets');\n        const query = new Moralis.Query(Tweets);\n\n        if (profile) {\n          query.equalTo('tweeterAcc', account);\n        }\n\n        const results = await query.find();\n        setTweetArr(results);\n        console.log(results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    getTweets();\n  }, [profile]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tweetArr === null || tweetArr === void 0 ? void 0 : tweetArr.map(e => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedTweet\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: e.attributes.tweeterPfp ? e.attributes.tweeterPfp : defaultImgs[0],\n            className: \"profilePic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"completeTweet\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"who\",\n              children: [e.attributes.tweeterUserName.slice(0, 6), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"accWhen\",\n                children: `${e.attributes.tweeterAcc.slice(0, 4)}... ${e.attributes.tweeterAcc.slice(38)} • ${e.attributes.createdAt.toLocaleString('en-US', {\n                  month: 'short'\n                })}\n                    ${e.attributes.createdAt.toLocaleString('en-US', {\n                  day: 'numeric'\n                })}\n                    `\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweetContent\",\n              children: [e.attributes.tweetTxt, e.attributes.tweetImg && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: e.attributes.tweetImg,\n                className: \"tweetImg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"interactions\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"interactionNums\",\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#3f3f3f\",\n                  size: 20,\n                  svg: \"messageCircle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"interactionNums\",\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#3f3f3f\",\n                  size: 20,\n                  svg: \"star\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 23\n                }, this), \"12\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"interactionNums\",\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#3f3f3f\",\n                  size: 20,\n                  svg: \"matic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)\n      }, void 0, false);\n    }).reverse()\n  }, void 0, false);\n};\n\n_s(TweetInFeed, \"pOwK7MdYdnvS8aZU7dFkJb7Tp10=\", false, function () {\n  return [useMoralis];\n});\n\n_c = TweetInFeed;\nexport default TweetInFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetInFeed\");","map":{"version":3,"names":["React","defaultImgs","Icon","useMoralis","useState","useEffect","get","TweetInFeed","profile","tweetArr","setTweetArr","Moralis","account","getTweets","Tweets","Object","extend","query","Query","equalTo","results","find","console","log","error","map","e","attributes","tweeterPfp","tweeterUserName","slice","tweeterAcc","createdAt","toLocaleString","month","day","tweetTxt","tweetImg","reverse"],"sources":["/Users/Agnesia/Projects/Web-3.0-Twitter-Clone/src/components/TweetInFeed.js"],"sourcesContent":["/* eslint-disable jsx-a11y/alt-text */\nimport React from 'react'\nimport './TweetInFeed.css'\nimport { defaultImgs } from '../defaultimgs'\nimport { Icon } from 'web3uikit'\nimport { useMoralis } from 'react-moralis'\nimport { useState, useEffect } from 'react'\nimport { get } from 'https-browserify'\n\nconst TweetInFeed = ({ profile }) => {\n  const [tweetArr, setTweetArr] = useState()\n  const { Moralis, account } = useMoralis()\n\n  useEffect(() => {\n    async function getTweets() {\n      try {\n        const Tweets = Moralis.Object.extend('Tweets')\n        const query = new Moralis.Query(Tweets)\n        if (profile) {\n          query.equalTo('tweeterAcc', account)\n        }\n        const results = await query.find()\n\n        setTweetArr(results)\n        console.log(results)\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    getTweets()\n  }, [profile])\n\n  return (\n    <>\n      {tweetArr\n        ?.map((e) => {\n          return (\n            <>\n              <div className='feedTweet'>\n                <img\n                  src={\n                    e.attributes.tweeterPfp\n                      ? e.attributes.tweeterPfp\n                      : defaultImgs[0]\n                  }\n                  className='profilePic'\n                />\n                <div className='completeTweet'>\n                  <div className='who'>\n                    {e.attributes.tweeterUserName.slice(0, 6)}\n                    <div className='accWhen'>\n                      {`${e.attributes.tweeterAcc.slice(\n                        0,\n                        4\n                      )}... ${e.attributes.tweeterAcc.slice(\n                        38\n                      )} • ${e.attributes.createdAt.toLocaleString('en-US', {\n                        month: 'short',\n                      })}\n                    ${e.attributes.createdAt.toLocaleString('en-US', {\n                      day: 'numeric',\n                    })}\n                    `}\n                    </div>\n                  </div>\n                  <div className='tweetContent'>\n                    {e.attributes.tweetTxt}\n                    {e.attributes.tweetImg && (\n                      <img\n                        src={e.attributes.tweetImg}\n                        className='tweetImg'\n                      ></img>\n                    )}\n                  </div>\n                  <div className='interactions'>\n                    <div className='interactionNums'>\n                      <Icon fill='#3f3f3f' size={20} svg='messageCircle' />\n                    </div>\n                    <div className='interactionNums'>\n                      <Icon fill='#3f3f3f' size={20} svg='star' />\n                      12\n                    </div>\n                    <div className='interactionNums'>\n                      <Icon fill='#3f3f3f' size={20} svg='matic' />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </>\n          )\n        })\n        .reverse()}\n\n      {/* <div className='feedTweet'>\n        <img src={defaultImgs[0]} className='profilePic' />\n        <div className='completeTweet'>\n          <div className='who'>\n            Juhizzz\n            <div className='accWhen'>0xfb5..6269 • 1h</div>\n          </div>\n          <div className='tweetContent'>\n            Nice day golfing today shot 73 (+2)\n            <img src={golf} className='tweetImg' />\n          </div>\n          <div className='interactions'>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='messageCircle' />\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='star' />\n              12\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='matic' />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='feedTweet'></div>\n\n      <div className='feedTweet'>\n        <img src={defaultImgs[0]} className='profilePic'></img>\n        <div className='completeTweet'>\n          <div className='who'>\n            Juhizzz\n            <div className='accWhen'>0xfb5..6269 · 1h</div>\n          </div>\n          <div className='tweetContent'>\n            is simply dummy text of the printing and typesetting industry. Lorem\n            Ipsum has been the industry's standard dummy text ever since the\n            1500s, when an unknown printer took a galley of type and scrambled\n            it to make a type specimen book. It has survived not only five\n            centuries, but also the leap into electronic typesetting, remaining\n            essentially un\n          </div>\n          <div className='interactions'>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='messageCircle' />\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='star' />\n              12\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='matic' />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className='feedTweet'>\n        <img src={defaultImgs[0]} className='profilePic'></img>\n        <div className='completeTweet'>\n          <div className='who'>\n            Juhizzz\n            <div className='accWhen'>0xfb5..6269 · 1h</div>\n          </div>\n          <div className='tweetContent'>\n            Thoughts on the new Coca-Cola banana 🥤🍌 flavor?\n          </div>\n          <div className='interactions'>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='messageCircle' />\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='star' />\n              12\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='matic' />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='feedTweet'>\n        <img src={defaultImgs[0]} className='profilePic'></img>\n        <div className='completeTweet'>\n          <div className='who'>\n            Juhizzz\n            <div className='accWhen'>0xfb5..6269 · 1h</div>\n          </div>\n          <div className='tweetContent'>\n            Love spending time on the water 🌊🌅\n            <img src={canoe} className='tweetImg'></img>\n          </div>\n          <div className='interactions'>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='messageCircle' />\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='star' />\n              12\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='matic' />\n            </div>\n          </div>\n        </div>\n      </div> */}\n    </>\n  )\n}\n\nexport default TweetInFeed\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}