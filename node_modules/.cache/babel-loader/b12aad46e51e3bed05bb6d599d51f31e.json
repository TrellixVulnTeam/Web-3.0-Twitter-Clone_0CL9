{"ast":null,"code":"var _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/alt-text */\nimport React from 'react';\nimport './TweetInFeed.css';\nimport golf from '../images/golf.png';\nimport canoe from '../images/canoe.png';\nimport { defaultImgs } from '../defaultimgs';\nimport { Icon } from 'web3uikit';\nimport { useMoralis } from 'react-moralis';\nimport { useState, useEffect } from 'react';\nimport { get } from 'https-browserify';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TweetInFeed = _ref => {\n  _s();\n\n  let {\n    profile\n  } = _ref;\n  const [tweetArr, setTweetArr] = useState();\n  const {\n    Moralis,\n    account\n  } = useMoralis();\n  useEffect(() => {\n    async function getTweets() {\n      try {\n        const Tweets = Moralis.Object.extend('Tweets');\n        const query = new Moralis.Query(Tweets);\n\n        if (profile) {\n          query.equalTo('tweeterAcc', account);\n        }\n\n        const results = await query.find();\n        setTweetArr(results);\n        console.log(results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    getTweets();\n  }, [profile]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tweetArr === null || tweetArr === void 0 ? void 0 : tweetArr.map(e => {})\n  }, void 0, false);\n};\n\n_s(TweetInFeed, \"pOwK7MdYdnvS8aZU7dFkJb7Tp10=\", false, function () {\n  return [useMoralis];\n});\n\n_c = TweetInFeed;\nexport default TweetInFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetInFeed\");","map":{"version":3,"sources":["/Users/Agnesia/Projects/youtube-tutorials/Twitter-Starter/src/components/TweetInFeed.js"],"names":["React","golf","canoe","defaultImgs","Icon","useMoralis","useState","useEffect","get","TweetInFeed","profile","tweetArr","setTweetArr","Moralis","account","getTweets","Tweets","Object","extend","query","Query","equalTo","results","find","console","log","error","map","e"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,GAAT,QAAoB,kBAApB;;;;AAEA,MAAMC,WAAW,GAAG,QAAiB;AAAA;;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AACnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,EAAxC;AACA,QAAM;AAAEO,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBT,UAAU,EAAvC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeQ,SAAf,GAA2B;AACzB,UAAI;AACF,cAAMC,MAAM,GAAGH,OAAO,CAACI,MAAR,CAAeC,MAAf,CAAsB,QAAtB,CAAf;AACA,cAAMC,KAAK,GAAG,IAAIN,OAAO,CAACO,KAAZ,CAAkBJ,MAAlB,CAAd;;AACA,YAAIN,OAAJ,EAAa;AACXS,UAAAA,KAAK,CAACE,OAAN,CAAc,YAAd,EAA4BP,OAA5B;AACD;;AACD,cAAMQ,OAAO,GAAG,MAAMH,KAAK,CAACI,IAAN,EAAtB;AAEAX,QAAAA,WAAW,CAACU,OAAD,CAAX;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACD,OAVD,CAUE,OAAOI,KAAP,EAAc;AACdF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF;;AACDX,IAAAA,SAAS;AACV,GAjBQ,EAiBN,CAACL,OAAD,CAjBM,CAAT;AAmBA,sBACE;AAAA,cACGC,QADH,aACGA,QADH,uBACGA,QAAQ,CAAEgB,GAAV,CAAeC,CAAD,IAAO,CAAE,CAAvB;AADH,mBADF;AAgHD,CAvID;;GAAMnB,W;UAEyBJ,U;;;KAFzBI,W;AAyIN,eAAeA,WAAf","sourcesContent":["/* eslint-disable jsx-a11y/alt-text */\nimport React from 'react'\nimport './TweetInFeed.css'\nimport golf from '../images/golf.png'\nimport canoe from '../images/canoe.png'\nimport { defaultImgs } from '../defaultimgs'\nimport { Icon } from 'web3uikit'\nimport { useMoralis } from 'react-moralis'\nimport { useState, useEffect } from 'react'\nimport { get } from 'https-browserify'\n\nconst TweetInFeed = ({ profile }) => {\n  const [tweetArr, setTweetArr] = useState()\n  const { Moralis, account } = useMoralis()\n\n  useEffect(() => {\n    async function getTweets() {\n      try {\n        const Tweets = Moralis.Object.extend('Tweets')\n        const query = new Moralis.Query(Tweets)\n        if (profile) {\n          query.equalTo('tweeterAcc', account)\n        }\n        const results = await query.find()\n\n        setTweetArr(results)\n        console.log(results)\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    getTweets()\n  }, [profile])\n\n  return (\n    <>\n      {tweetArr?.map((e) => {})}\n\n      {/* <div className='feedTweet'>\n        <img src={defaultImgs[0]} className='profilePic' />\n        <div className='completeTweet'>\n          <div className='who'>\n            Juhizzz\n            <div className='accWhen'>0xfb5..6269 ‚Ä¢ 1h</div>\n          </div>\n          <div className='tweetContent'>\n            Nice day golfing today shot 73 (+2)\n            <img src={golf} className='tweetImg' />\n          </div>\n          <div className='interactions'>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='messageCircle' />\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='star' />\n              12\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='matic' />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='feedTweet'></div>\n\n      <div className='feedTweet'>\n        <img src={defaultImgs[0]} className='profilePic'></img>\n        <div className='completeTweet'>\n          <div className='who'>\n            Juhizzz\n            <div className='accWhen'>0xfb5..6269 ¬∑ 1h</div>\n          </div>\n          <div className='tweetContent'>\n            is simply dummy text of the printing and typesetting industry. Lorem\n            Ipsum has been the industry's standard dummy text ever since the\n            1500s, when an unknown printer took a galley of type and scrambled\n            it to make a type specimen book. It has survived not only five\n            centuries, but also the leap into electronic typesetting, remaining\n            essentially un\n          </div>\n          <div className='interactions'>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='messageCircle' />\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='star' />\n              12\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='matic' />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className='feedTweet'>\n        <img src={defaultImgs[0]} className='profilePic'></img>\n        <div className='completeTweet'>\n          <div className='who'>\n            Juhizzz\n            <div className='accWhen'>0xfb5..6269 ¬∑ 1h</div>\n          </div>\n          <div className='tweetContent'>\n            Thoughts on the new Coca-Cola banana ü•§üçå flavor?\n          </div>\n          <div className='interactions'>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='messageCircle' />\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='star' />\n              12\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='matic' />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='feedTweet'>\n        <img src={defaultImgs[0]} className='profilePic'></img>\n        <div className='completeTweet'>\n          <div className='who'>\n            Juhizzz\n            <div className='accWhen'>0xfb5..6269 ¬∑ 1h</div>\n          </div>\n          <div className='tweetContent'>\n            Love spending time on the water üåäüåÖ\n            <img src={canoe} className='tweetImg'></img>\n          </div>\n          <div className='interactions'>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='messageCircle' />\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='star' />\n              12\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='matic' />\n            </div>\n          </div>\n        </div>\n      </div> */}\n    </>\n  )\n}\n\nexport default TweetInFeed\n"]},"metadata":{},"sourceType":"module"}