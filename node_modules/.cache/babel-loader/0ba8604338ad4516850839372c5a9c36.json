{"ast":null,"code":"var _jsxFileName = \"/Users/Agnesia/Projects/youtube-tutorials/Twitter-Starter/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Home.css';\nimport { defaultImgs } from '../defaultimgs';\nimport { TextArea, Icon } from 'web3uikit';\nimport { useState, useRef } from 'react';\nimport TweetInFeed from '../components/TweetInFeed';\nimport { useMoralis, useWeb3ExecuteFunction } from 'react-moralis';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const {\n    Moralis\n  } = useMoralis();\n  const user = Moralis.User.current();\n  const contractProcessor = useWeb3ExecuteFunction();\n  const inputFile = useRef(null);\n  const [selectedFile, setSelectedFile] = useState();\n  const [theFile, setTheFile] = useState();\n  const [tweet, setTweet] = useState();\n\n  async function maticTweet() {\n    if (!tweet) return;\n    let img;\n\n    if (theFile) {\n      const data = theFile;\n      const file = new Moralis.File(data.name, data);\n      await file.saveIPFS();\n      img = file.ipfs();\n    } else {\n      img = 'No Img';\n    }\n\n    let options = {\n      contractAddress: '0xd9145CCE52D386f254917e481eB44e9943F39138',\n      functionName: 'addTweet',\n      abi: [{\n        inputs: [{\n          internalType: 'string',\n          name: 'tweetTxt',\n          type: 'string'\n        }, {\n          internalType: 'string',\n          name: 'tweetImg',\n          type: 'string'\n        }],\n        name: 'addTweet',\n        outputs: [],\n        stateMutability: 'payable',\n        type: 'function'\n      }],\n      params: {}\n    };\n  }\n\n  async function saveTweet() {\n    if (!tweet) return;\n    const Tweets = Moralis.Object.extend('Tweets');\n    const newTweet = new Tweets();\n    newTweet.set('tweetTxt', tweet);\n    newTweet.set('tweeterPfp', user.attributes.pfp);\n    newTweet.set('tweeterAcc', user.attributes.ethAddress);\n    newTweet.set('tweeterUserName', user.attributes.username);\n\n    if (theFile) {\n      const data = theFile;\n      const file = new Moralis.File(data.name, data);\n      await file.saveIPFS();\n      newTweet.set('tweetImg', file.ipfs());\n    }\n\n    await newTweet.save();\n    window.location.reload();\n  }\n\n  const onImageClick = () => {\n    inputFile.current.click();\n  };\n\n  const changeHandler = event => {\n    const img = event.target.files[0];\n    setTheFile(img);\n    setSelectedFile(URL.createObjectURL(img));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageIdentify\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTweet\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.attributes.pfp ? user.attributes.pfp : defaultImgs[0],\n          className: \"profilePic\",\n          alt: \"profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweetBox\",\n          children: [/*#__PURE__*/_jsxDEV(TextArea, {\n            label: \"\",\n            name: \"tweetTxtArea\",\n            value: \"GM World\",\n            type: \"text\",\n            onChange: e => setTweet(e.target.value),\n            width: \"95%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedFile,\n            className: \"tweetImg\",\n            alt: \"tweetImg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imgOrTweet\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"imgDiv\",\n              onClick: onImageClick,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file\",\n                ref: inputFile,\n                onChange: changeHandler,\n                style: {\n                  display: 'none'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Icon, {\n                fill: \"#1DA1F2\",\n                size: \"20\",\n                svg: \"image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweetOptions\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tweet\",\n                onClick: saveTweet,\n                children: \"Tweet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tweet\",\n                style: {\n                  backgroundColor: '#8247e5'\n                },\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#ffffff\",\n                  size: \"20\",\n                  svg: \"matic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TweetInFeed, {\n        profile: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"18+E8SMrsUCEPqeJ1+zm5hNFqLU=\", false, function () {\n  return [useMoralis, useWeb3ExecuteFunction];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/Agnesia/Projects/youtube-tutorials/Twitter-Starter/src/pages/Home.js"],"names":["React","defaultImgs","TextArea","Icon","useState","useRef","TweetInFeed","useMoralis","useWeb3ExecuteFunction","Home","Moralis","user","User","current","contractProcessor","inputFile","selectedFile","setSelectedFile","theFile","setTheFile","tweet","setTweet","maticTweet","img","data","file","File","name","saveIPFS","ipfs","options","contractAddress","functionName","abi","inputs","internalType","type","outputs","stateMutability","params","saveTweet","Tweets","Object","extend","newTweet","set","attributes","pfp","ethAddress","username","save","window","location","reload","onImageClick","click","changeHandler","event","target","files","URL","createObjectURL","e","value","display","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './Home.css'\nimport { defaultImgs } from '../defaultimgs'\nimport { TextArea, Icon } from 'web3uikit'\nimport { useState, useRef } from 'react'\nimport TweetInFeed from '../components/TweetInFeed'\nimport { useMoralis, useWeb3ExecuteFunction } from 'react-moralis'\n\nconst Home = () => {\n  const { Moralis } = useMoralis()\n  const user = Moralis.User.current()\n  const contractProcessor = useWeb3ExecuteFunction()\n\n  const inputFile = useRef(null)\n  const [selectedFile, setSelectedFile] = useState()\n  const [theFile, setTheFile] = useState()\n  const [tweet, setTweet] = useState()\n\n  async function maticTweet() {\n    if (!tweet) return\n\n    let img\n    if (theFile) {\n      const data = theFile\n      const file = new Moralis.File(data.name, data)\n      await file.saveIPFS()\n      img = file.ipfs()\n    } else {\n      img = 'No Img'\n    }\n\n    let options = {\n      contractAddress: '0xd9145CCE52D386f254917e481eB44e9943F39138',\n      functionName: 'addTweet',\n      abi: [\n        {\n          inputs: [\n            {\n              internalType: 'string',\n              name: 'tweetTxt',\n              type: 'string',\n            },\n            {\n              internalType: 'string',\n              name: 'tweetImg',\n              type: 'string',\n            },\n          ],\n          name: 'addTweet',\n          outputs: [],\n          stateMutability: 'payable',\n          type: 'function',\n        },\n      ],\n      params: {},\n    }\n  }\n\n  async function saveTweet() {\n    if (!tweet) return\n\n    const Tweets = Moralis.Object.extend('Tweets')\n\n    const newTweet = new Tweets()\n\n    newTweet.set('tweetTxt', tweet)\n    newTweet.set('tweeterPfp', user.attributes.pfp)\n    newTweet.set('tweeterAcc', user.attributes.ethAddress)\n    newTweet.set('tweeterUserName', user.attributes.username)\n\n    if (theFile) {\n      const data = theFile\n      const file = new Moralis.File(data.name, data)\n      await file.saveIPFS()\n      newTweet.set('tweetImg', file.ipfs())\n    }\n\n    await newTweet.save()\n    window.location.reload()\n  }\n\n  const onImageClick = () => {\n    inputFile.current.click()\n  }\n\n  const changeHandler = (event) => {\n    const img = event.target.files[0]\n    setTheFile(img)\n    setSelectedFile(URL.createObjectURL(img))\n  }\n  return (\n    <>\n      <div className='pageIdentify'>Home</div>\n      <div className='mainContent'>\n        <div className='profileTweet'>\n          <img\n            src={user.attributes.pfp ? user.attributes.pfp : defaultImgs[0]}\n            className='profilePic'\n            alt='profile'\n          />\n          <div className='tweetBox'>\n            <TextArea\n              label=''\n              name='tweetTxtArea'\n              value='GM World'\n              type='text'\n              onChange={(e) => setTweet(e.target.value)}\n              width='95%'\n            ></TextArea>\n            {selectedFile && (\n              <img src={selectedFile} className='tweetImg' alt='tweetImg'></img>\n            )}\n            <div className='imgOrTweet'>\n              <div className='imgDiv' onClick={onImageClick}>\n                <input\n                  type='file'\n                  name='file'\n                  ref={inputFile}\n                  onChange={changeHandler}\n                  style={{ display: 'none' }}\n                />\n                <Icon fill='#1DA1F2' size='20' svg='image'></Icon>\n              </div>\n              <div className='tweetOptions'>\n                <div className='tweet' onClick={saveTweet}>\n                  Tweet\n                </div>\n                <div className='tweet' style={{ backgroundColor: '#8247e5' }}>\n                  <Icon fill='#ffffff' size='20' svg='matic'></Icon>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <TweetInFeed profile={false} />\n      </div>\n    </>\n  )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}