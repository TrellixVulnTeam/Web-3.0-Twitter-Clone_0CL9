{"ast":null,"code":"var _jsxFileName = \"/Users/Agnesia/Projects/youtube-tutorials/Twitter-Starter/src/components/TweetInFeed.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/alt-text */\nimport React from 'react';\nimport './TweetInFeed.css';\nimport golf from '../images/golf.png';\nimport canoe from '../images/canoe.png';\nimport { defaultImgs } from '../defaultimgs';\nimport { Icon } from 'web3uikit';\nimport { useMoralis } from 'react-moralis';\nimport { useState, useEffect } from 'react';\nimport { get } from 'https-browserify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TweetInFeed = _ref => {\n  _s();\n\n  let {\n    profile\n  } = _ref;\n  const [tweetArr, setTweetArr] = useState();\n  const {\n    Moralis,\n    account\n  } = useMoralis();\n  useEffect(() => {\n    async function getTweets() {\n      try {\n        const Tweets = Moralis.Object.extend('Tweets');\n        const query = new Moralis.Query(Tweets);\n\n        if (profile) {\n          query.equalTo('tweeterAcc', account);\n        }\n\n        const results = await query.find();\n        setTweetArr(results);\n        console.log(results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    getTweets();\n  }, [profile]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tweetArr === null || tweetArr === void 0 ? void 0 : tweetArr.map(e => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedTweet\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: e.attributes.tweeterPfp ? e.attributes.tweeterPfp : defaultImgs[0],\n            className: \"profilePic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"completeTweet\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"who\",\n              children: [e.attributes.tweeterUserName.slice(0, 6), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"accWhen\",\n                children: `${e.attributes.tweeterAcc.slice(0, 4)}... ${e.attributes.tweeterAcc.slice(38)} • ${e.attributes.createdAt.toLocaleString('en-US', {\n                  month: 'short'\n                })}\n                    ${e.attributes.createdAt.toLocaleString('en-US', {\n                  day: 'numeric'\n                })}\n                    `\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweetContent\",\n              children: [\"Nice day golfing today shot 73 (+2)\", /*#__PURE__*/_jsxDEV(\"img\", {\n                src: golf,\n                className: \"tweetImg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"interactions\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"interactionNums\",\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#3f3f3f\",\n                  size: 20,\n                  svg: \"messageCircle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"interactionNums\",\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#3f3f3f\",\n                  size: 20,\n                  svg: \"star\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 21\n                }, this), \"12\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"interactionNums\",\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#3f3f3f\",\n                  size: 20,\n                  svg: \"matic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    })\n  }, void 0, false);\n};\n\n_s(TweetInFeed, \"pOwK7MdYdnvS8aZU7dFkJb7Tp10=\", false, function () {\n  return [useMoralis];\n});\n\n_c = TweetInFeed;\nexport default TweetInFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetInFeed\");","map":{"version":3,"sources":["/Users/Agnesia/Projects/youtube-tutorials/Twitter-Starter/src/components/TweetInFeed.js"],"names":["React","golf","canoe","defaultImgs","Icon","useMoralis","useState","useEffect","get","TweetInFeed","profile","tweetArr","setTweetArr","Moralis","account","getTweets","Tweets","Object","extend","query","Query","equalTo","results","find","console","log","error","map","e","attributes","tweeterPfp","tweeterUserName","slice","tweeterAcc","createdAt","toLocaleString","month","day"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/alt-text */\nimport React from 'react'\nimport './TweetInFeed.css'\nimport golf from '../images/golf.png'\nimport canoe from '../images/canoe.png'\nimport { defaultImgs } from '../defaultimgs'\nimport { Icon } from 'web3uikit'\nimport { useMoralis } from 'react-moralis'\nimport { useState, useEffect } from 'react'\nimport { get } from 'https-browserify'\n\nconst TweetInFeed = ({ profile }) => {\n  const [tweetArr, setTweetArr] = useState()\n  const { Moralis, account } = useMoralis()\n\n  useEffect(() => {\n    async function getTweets() {\n      try {\n        const Tweets = Moralis.Object.extend('Tweets')\n        const query = new Moralis.Query(Tweets)\n        if (profile) {\n          query.equalTo('tweeterAcc', account)\n        }\n        const results = await query.find()\n\n        setTweetArr(results)\n        console.log(results)\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    getTweets()\n  }, [profile])\n\n  return (\n    <>\n      {tweetArr?.map((e) => {\n        return (\n          <>\n            <div className='feedTweet'>\n              <img\n                src={\n                  e.attributes.tweeterPfp\n                    ? e.attributes.tweeterPfp\n                    : defaultImgs[0]\n                }\n                className='profilePic'\n              />\n              <div className='completeTweet'>\n                <div className='who'>\n                  {e.attributes.tweeterUserName.slice(0, 6)}\n                  <div className='accWhen'>\n                    {`${e.attributes.tweeterAcc.slice(\n                      0,\n                      4\n                    )}... ${e.attributes.tweeterAcc.slice(\n                      38\n                    )} • ${e.attributes.createdAt.toLocaleString('en-US', {\n                      month: 'short',\n                    })}\n                    ${e.attributes.createdAt.toLocaleString('en-US', {\n                      day: 'numeric',\n                    })}\n                    `}\n                  </div>\n                </div>\n                <div className='tweetContent'>\n                  Nice day golfing today shot 73 (+2)\n                  <img src={golf} className='tweetImg' />\n                </div>\n                <div className='interactions'>\n                  <div className='interactionNums'>\n                    <Icon fill='#3f3f3f' size={20} svg='messageCircle' />\n                  </div>\n                  <div className='interactionNums'>\n                    <Icon fill='#3f3f3f' size={20} svg='star' />\n                    12\n                  </div>\n                  <div className='interactionNums'>\n                    <Icon fill='#3f3f3f' size={20} svg='matic' />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        )\n      })}\n\n      {/* <div className='feedTweet'>\n        <img src={defaultImgs[0]} className='profilePic' />\n        <div className='completeTweet'>\n          <div className='who'>\n            Juhizzz\n            <div className='accWhen'>0xfb5..6269 • 1h</div>\n          </div>\n          <div className='tweetContent'>\n            Nice day golfing today shot 73 (+2)\n            <img src={golf} className='tweetImg' />\n          </div>\n          <div className='interactions'>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='messageCircle' />\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='star' />\n              12\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='matic' />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='feedTweet'></div>\n\n      <div className='feedTweet'>\n        <img src={defaultImgs[0]} className='profilePic'></img>\n        <div className='completeTweet'>\n          <div className='who'>\n            Juhizzz\n            <div className='accWhen'>0xfb5..6269 · 1h</div>\n          </div>\n          <div className='tweetContent'>\n            is simply dummy text of the printing and typesetting industry. Lorem\n            Ipsum has been the industry's standard dummy text ever since the\n            1500s, when an unknown printer took a galley of type and scrambled\n            it to make a type specimen book. It has survived not only five\n            centuries, but also the leap into electronic typesetting, remaining\n            essentially un\n          </div>\n          <div className='interactions'>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='messageCircle' />\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='star' />\n              12\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='matic' />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className='feedTweet'>\n        <img src={defaultImgs[0]} className='profilePic'></img>\n        <div className='completeTweet'>\n          <div className='who'>\n            Juhizzz\n            <div className='accWhen'>0xfb5..6269 · 1h</div>\n          </div>\n          <div className='tweetContent'>\n            Thoughts on the new Coca-Cola banana 🥤🍌 flavor?\n          </div>\n          <div className='interactions'>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='messageCircle' />\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='star' />\n              12\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='matic' />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='feedTweet'>\n        <img src={defaultImgs[0]} className='profilePic'></img>\n        <div className='completeTweet'>\n          <div className='who'>\n            Juhizzz\n            <div className='accWhen'>0xfb5..6269 · 1h</div>\n          </div>\n          <div className='tweetContent'>\n            Love spending time on the water 🌊🌅\n            <img src={canoe} className='tweetImg'></img>\n          </div>\n          <div className='interactions'>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='messageCircle' />\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='star' />\n              12\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='matic' />\n            </div>\n          </div>\n        </div>\n      </div> */}\n    </>\n  )\n}\n\nexport default TweetInFeed\n"]},"metadata":{},"sourceType":"module"}