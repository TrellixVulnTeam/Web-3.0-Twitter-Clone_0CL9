{"ast":null,"code":"var _jsxFileName = \"/Users/Agnesia/Projects/youtube-tutorials/Twitter-Starter/src/pages/Settings.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Settings.css';\nimport { useState, useRef, useEffect } from 'react';\nimport { Input } from 'web3uikit';\nimport pfp1 from '../images/pfp1.png';\nimport pfp2 from '../images/pfp2.png';\nimport pfp3 from '../images/pfp3.png';\nimport pfp4 from '../images/pfp4.png';\nimport pfp5 from '../images/pfp5.png';\nimport { defaultImgs } from '../defaultimgs';\nimport { useMoralis, useMoralisWeb3Api } from 'react-moralis';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Settings = () => {\n  _s();\n\n  const pfps = [pfp1, pfp2, pfp3, pfp4, pfp5];\n  const [selectedPFP, setSelectedPFP] = useState();\n  const inputFile = useRef(null);\n  const [selectedFile, setSelectedFile] = useState(defaultImgs[1]);\n  const [theFile, setTheFile] = useState();\n  const [username, setUsername] = useState();\n  const [bio, setBio] = useState();\n  const {\n    Moralis,\n    isAuthenticated,\n    account\n  } = useMoralis();\n  const Web3Api = useMoralisWeb3Api();\n  useEffect(() => {\n    const fetchNFTs = async () => {\n      const options = {\n        chain: 'mumbai',\n        address: account\n      };\n    };\n  }, [isAuthenticated, account]);\n\n  const onBannerClick = () => {\n    inputFile.current.click();\n  };\n\n  const changeHandler = event => {\n    const img = event.target.files[0];\n    setTheFile(img);\n    setSelectedFile(URL.createObjectURL(img));\n  };\n\n  const saveEdits = async () => {\n    const User = Moralis.Object.extend('_User');\n    const query = new Moralis.Query(User);\n    const myDetails = await query.first();\n\n    if (bio) {\n      myDetails.set('bio', bio);\n    }\n\n    if (username) {\n      myDetails.set('username', username);\n    }\n\n    if (theFile) {\n      const data = theFile;\n      const file = new Moralis.File(data.name, data);\n      await file.saveIPFS();\n      myDetails.set('banner', file.ipfs());\n    }\n\n    await myDetails.save();\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageIdentify\",\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settingsPage\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"Name\",\n        name: \"NameChange\",\n        width: \"100%\",\n        labelBgColor: \"#141d26\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Bio\",\n        name: \"bioChange\",\n        width: \"100%\",\n        labelBgColor: \"#141d26\",\n        onChange: e => setBio(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pfp\",\n        children: [\"Profile Images (Your NFTs)\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pfpOptions\",\n          children: pfps.map((e, i) => {\n            return /*#__PURE__*/_jsxDEV(\"img\", {\n              src: e,\n              alt: \"\",\n              className: selectedPFP === e ? 'pfpOptionSelected' : 'pfpOption',\n              onClick: () => {\n                setSelectedPFP(pfps[i]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pfp\",\n        children: [\"Profile Banner\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pfpOptions\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedFile,\n            onClick: onBannerClick,\n            alt: \"\",\n            className: \"banner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"file\",\n            ref: inputFile,\n            onChange: changeHandler,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"save\",\n        onClick: () => saveEdits(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Settings, \"CqgcOty7WTsnLCuU7G8FLl34B8g=\", false, function () {\n  return [useMoralis, useMoralisWeb3Api];\n});\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["/Users/Agnesia/Projects/youtube-tutorials/Twitter-Starter/src/pages/Settings.js"],"names":["React","Link","useState","useRef","useEffect","Input","pfp1","pfp2","pfp3","pfp4","pfp5","defaultImgs","useMoralis","useMoralisWeb3Api","Settings","pfps","selectedPFP","setSelectedPFP","inputFile","selectedFile","setSelectedFile","theFile","setTheFile","username","setUsername","bio","setBio","Moralis","isAuthenticated","account","Web3Api","fetchNFTs","options","chain","address","onBannerClick","current","click","changeHandler","event","img","target","files","URL","createObjectURL","saveEdits","User","Object","extend","query","Query","myDetails","first","set","data","file","File","name","saveIPFS","ipfs","save","window","location","reload","e","value","map","i","display"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './Settings.css'\nimport { useState, useRef, useEffect } from 'react'\nimport { Input } from 'web3uikit'\nimport pfp1 from '../images/pfp1.png'\nimport pfp2 from '../images/pfp2.png'\nimport pfp3 from '../images/pfp3.png'\nimport pfp4 from '../images/pfp4.png'\nimport pfp5 from '../images/pfp5.png'\nimport { defaultImgs } from '../defaultimgs'\nimport { useMoralis, useMoralisWeb3Api } from 'react-moralis'\n\nconst Settings = () => {\n  const pfps = [pfp1, pfp2, pfp3, pfp4, pfp5]\n  const [selectedPFP, setSelectedPFP] = useState()\n  const inputFile = useRef(null)\n  const [selectedFile, setSelectedFile] = useState(defaultImgs[1])\n  const [theFile, setTheFile] = useState()\n  const [username, setUsername] = useState()\n  const [bio, setBio] = useState()\n  const { Moralis, isAuthenticated, account } = useMoralis()\n  const Web3Api = useMoralisWeb3Api()\n\n  useEffect(() => {\n    const fetchNFTs = async () => {\n      const options = {\n        chain: 'mumbai',\n        address: account,\n      }\n    }\n  }, [isAuthenticated, account])\n\n  const onBannerClick = () => {\n    inputFile.current.click()\n  }\n  const changeHandler = (event) => {\n    const img = event.target.files[0]\n    setTheFile(img)\n    setSelectedFile(URL.createObjectURL(img))\n  }\n\n  const saveEdits = async () => {\n    const User = Moralis.Object.extend('_User')\n    const query = new Moralis.Query(User)\n    const myDetails = await query.first()\n\n    if (bio) {\n      myDetails.set('bio', bio)\n    }\n    if (username) {\n      myDetails.set('username', username)\n    }\n    if (theFile) {\n      const data = theFile\n      const file = new Moralis.File(data.name, data)\n      await file.saveIPFS()\n      myDetails.set('banner', file.ipfs())\n    }\n\n    await myDetails.save()\n    window.location.reload()\n  }\n\n  return (\n    <>\n      <div className='pageIdentify'>Settings</div>\n      <div className='settingsPage'>\n        <Input\n          label='Name'\n          name='NameChange'\n          width='100%'\n          labelBgColor='#141d26'\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        <Input\n          label='Bio'\n          name='bioChange'\n          width='100%'\n          labelBgColor='#141d26'\n          onChange={(e) => setBio(e.target.value)}\n        />\n\n        <div className='pfp'>\n          Profile Images (Your NFTs)\n          <div className='pfpOptions'>\n            {pfps.map((e, i) => {\n              return (\n                <img\n                  src={e}\n                  alt=''\n                  className={\n                    selectedPFP === e ? 'pfpOptionSelected' : 'pfpOption'\n                  }\n                  onClick={() => {\n                    setSelectedPFP(pfps[i])\n                  }}\n                />\n              )\n            })}\n          </div>\n        </div>\n\n        <div className='pfp'>\n          Profile Banner\n          <div className='pfpOptions'>\n            <img\n              src={selectedFile}\n              onClick={onBannerClick}\n              alt=''\n              className='banner'\n            />\n            <input\n              type='file'\n              name='file'\n              ref={inputFile}\n              onChange={changeHandler}\n              style={{ display: 'none' }}\n            />\n          </div>\n        </div>\n\n        <div className='save' onClick={() => saveEdits()}>\n          Save\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Settings\n"]},"metadata":{},"sourceType":"module"}