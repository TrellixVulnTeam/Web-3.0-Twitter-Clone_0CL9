{"ast":null,"code":"var _jsxFileName = \"/Users/Agnesia/Projects/Web-3.0-Twitter-Clone/src/pages/Settings.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // import { Link } from 'react-router-dom'\n\nimport './Settings.css';\nimport { useState, useRef, useEffect } from 'react';\nimport { Input } from 'web3uikit';\nimport { defaultImgs } from '../defaultimgs';\nimport { useMoralis, useMoralisWeb3Api } from 'react-moralis';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Settings = () => {\n  _s();\n\n  const [pfps, setPfps] = useState([]);\n  const [selectedPFP, setSelectedPFP] = useState();\n  const inputFile = useRef(null);\n  const [selectedFile, setSelectedFile] = useState(defaultImgs[1]);\n  const [theFile, setTheFile] = useState();\n  const [username, setUsername] = useState();\n  const [bio, setBio] = useState();\n  const {\n    Moralis,\n    isAuthenticated,\n    account\n  } = useMoralis();\n  const Web3Api = useMoralisWeb3Api();\n\n  const resolveLink = url => {\n    if (!url || !url.includes('ipfs://')) return url;\n    return url.replace('ipfs://', 'https://gateway.ipfs.io/ipfs/');\n  };\n\n  useEffect(() => {\n    const fetchNFTs = async () => {\n      const options = {\n        chain: 'mumbai',\n        address: account\n      };\n      const mumbaiNFTs = await Web3Api.account.getNFTs(options);\n      const images = mumbaiNFTs.result.map(e => {\n        var _JSON$parse;\n\n        return resolveLink((_JSON$parse = JSON.parse(e.metadata)) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.image);\n      });\n      setPfps(images);\n    };\n\n    fetchNFTs();\n  }, [isAuthenticated, account, Web3Api.account]);\n\n  const onBannerClick = () => {\n    inputFile.current.click();\n  };\n\n  const changeHandler = event => {\n    const img = event.target.files[0];\n    setTheFile(img);\n    setSelectedFile(URL.createObjectURL(img));\n  };\n\n  const saveEdits = async () => {\n    const User = Moralis.Object.extend('_User');\n    const query = new Moralis.Query(User);\n    const myDetails = await query.first();\n\n    if (bio) {\n      myDetails.set('bio', bio);\n    }\n\n    if (selectedPFP) {\n      myDetails.set('pfp', selectedPFP);\n    }\n\n    if (username) {\n      myDetails.set('username', username);\n    }\n\n    if (theFile) {\n      const data = theFile;\n      const file = new Moralis.File(data.name, data);\n      await file.saveIPFS();\n      myDetails.set('banner', file.ipfs());\n    }\n\n    await myDetails.save();\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageIdentify\",\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settingsPage\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"Name\",\n        name: \"NameChange\",\n        width: \"100%\",\n        labelBgColor: \"#141d26\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Bio\",\n        name: \"bioChange\",\n        width: \"100%\",\n        labelBgColor: \"#141d26\",\n        onChange: e => setBio(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pfp\",\n        children: [\"Profile Images (Your NFTs)\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pfpOptions\",\n          children: pfps.map((e, i) => {\n            return /*#__PURE__*/_jsxDEV(\"img\", {\n              src: e,\n              alt: \"\",\n              className: selectedPFP === e ? 'pfpOptionSelected' : 'pfpOption',\n              onClick: () => {\n                setSelectedPFP(pfps[i]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pfp\",\n        children: [\"Profile Banner\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pfpOptions\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedFile,\n            onClick: onBannerClick,\n            alt: \"\",\n            className: \"banner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"file\",\n            ref: inputFile,\n            onChange: changeHandler,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"save\",\n        onClick: () => saveEdits(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Settings, \"gXLaLC2r5zMK4eNciwbwFGjYj30=\", false, function () {\n  return [useMoralis, useMoralisWeb3Api];\n});\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Input","defaultImgs","useMoralis","useMoralisWeb3Api","Settings","pfps","setPfps","selectedPFP","setSelectedPFP","inputFile","selectedFile","setSelectedFile","theFile","setTheFile","username","setUsername","bio","setBio","Moralis","isAuthenticated","account","Web3Api","resolveLink","url","includes","replace","fetchNFTs","options","chain","address","mumbaiNFTs","getNFTs","images","result","map","e","JSON","parse","metadata","image","onBannerClick","current","click","changeHandler","event","img","target","files","URL","createObjectURL","saveEdits","User","Object","extend","query","Query","myDetails","first","set","data","file","File","name","saveIPFS","ipfs","save","window","location","reload","value","i","display"],"sources":["/Users/Agnesia/Projects/Web-3.0-Twitter-Clone/src/pages/Settings.js"],"sourcesContent":["import React from 'react'\n// import { Link } from 'react-router-dom'\nimport './Settings.css'\nimport { useState, useRef, useEffect } from 'react'\nimport { Input } from 'web3uikit'\nimport { defaultImgs } from '../defaultimgs'\nimport { useMoralis, useMoralisWeb3Api } from 'react-moralis'\n\nconst Settings = () => {\n  const [pfps, setPfps] = useState([])\n  const [selectedPFP, setSelectedPFP] = useState()\n  const inputFile = useRef(null)\n  const [selectedFile, setSelectedFile] = useState(defaultImgs[1])\n  const [theFile, setTheFile] = useState()\n  const [username, setUsername] = useState()\n  const [bio, setBio] = useState()\n  const { Moralis, isAuthenticated, account } = useMoralis()\n  const Web3Api = useMoralisWeb3Api()\n\n  const resolveLink = (url) => {\n    if (!url || !url.includes('ipfs://')) return url\n    return url.replace('ipfs://', 'https://gateway.ipfs.io/ipfs/')\n  }\n\n  useEffect(() => {\n    const fetchNFTs = async () => {\n      const options = {\n        chain: 'mumbai',\n        address: account,\n      }\n\n      const mumbaiNFTs = await Web3Api.account.getNFTs(options)\n      const images = mumbaiNFTs.result.map((e) =>\n        resolveLink(JSON.parse(e.metadata)?.image)\n      )\n      setPfps(images)\n    }\n\n    fetchNFTs()\n  }, [isAuthenticated, account, Web3Api.account])\n\n  const onBannerClick = () => {\n    inputFile.current.click()\n  }\n  const changeHandler = (event) => {\n    const img = event.target.files[0]\n    setTheFile(img)\n    setSelectedFile(URL.createObjectURL(img))\n  }\n\n  const saveEdits = async () => {\n    const User = Moralis.Object.extend('_User')\n    const query = new Moralis.Query(User)\n    const myDetails = await query.first()\n\n    if (bio) {\n      myDetails.set('bio', bio)\n    }\n    if (selectedPFP) {\n      myDetails.set('pfp', selectedPFP)\n    }\n    if (username) {\n      myDetails.set('username', username)\n    }\n    if (theFile) {\n      const data = theFile\n      const file = new Moralis.File(data.name, data)\n      await file.saveIPFS()\n      myDetails.set('banner', file.ipfs())\n    }\n\n    await myDetails.save()\n    window.location.reload()\n  }\n\n  return (\n    <>\n      <div className='pageIdentify'>Settings</div>\n      <div className='settingsPage'>\n        <Input\n          label='Name'\n          name='NameChange'\n          width='100%'\n          labelBgColor='#141d26'\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        <Input\n          label='Bio'\n          name='bioChange'\n          width='100%'\n          labelBgColor='#141d26'\n          onChange={(e) => setBio(e.target.value)}\n        />\n\n        <div className='pfp'>\n          Profile Images (Your NFTs)\n          <div className='pfpOptions'>\n            {pfps.map((e, i) => {\n              return (\n                <img\n                  src={e}\n                  alt=''\n                  className={\n                    selectedPFP === e ? 'pfpOptionSelected' : 'pfpOption'\n                  }\n                  onClick={() => {\n                    setSelectedPFP(pfps[i])\n                  }}\n                />\n              )\n            })}\n          </div>\n        </div>\n\n        <div className='pfp'>\n          Profile Banner\n          <div className='pfpOptions'>\n            <img\n              src={selectedFile}\n              onClick={onBannerClick}\n              alt=''\n              className='banner'\n            />\n            <input\n              type='file'\n              name='file'\n              ref={inputFile}\n              onChange={changeHandler}\n              style={{ display: 'none' }}\n            />\n          </div>\n        </div>\n\n        <div className='save' onClick={() => saveEdits()}>\n          Save\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Settings\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}