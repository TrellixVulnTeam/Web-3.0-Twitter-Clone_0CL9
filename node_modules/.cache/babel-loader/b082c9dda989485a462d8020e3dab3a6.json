{"ast":null,"code":"var _jsxFileName = \"/Users/Agnesia/Projects/youtube-tutorials/Twitter-Starter/src/pages/Settings.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Settings.css';\nimport { useState, useRef } from 'react';\nimport { Input } from 'web3uikit';\nimport pfp1 from '../images/pfp1.png';\nimport pfp2 from '../images/pfp2.png';\nimport pfp3 from '../images/pfp3.png';\nimport pfp4 from '../images/pfp4.png';\nimport pfp5 from '../images/pfp5.png';\nimport { defaultImgs } from '../defaultimgs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Settings = () => {\n  _s();\n\n  const pfps = [pfp1, pfp2, pfp3, pfp4, pfp5];\n  const [selectedPFP, setSelectedPFP] = useState();\n  const inputFile = useRef(null);\n  const [selectedFile, setSelectedFile] = useState(defaultImgs[1]);\n\n  const onBannerClick = () => {\n    inputFile.current.click();\n  };\n\n  const changeHandler = event => {\n    const img = event.target.files[0];\n    setSelectedFile(URL.createObjectURL(img));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageIdentify\",\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settingsPage\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"Name\",\n        name: \"NameChange\",\n        width: \"100%\",\n        labelBgColor: \"#141d26\" // onChange={(e) => setUsername(e.target.value)}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Bio\",\n        name: \"bioChange\",\n        width: \"100%\",\n        labelBgColor: \"#141d26\" // onChange={(e) => setBio(e.target.value)}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pfp\",\n        children: [\"Profile Images (Your NFTs)\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pfpOptions\",\n          children: pfps.map((e, i) => {\n            return /*#__PURE__*/_jsxDEV(\"img\", {\n              src: e,\n              alt: \"\",\n              className: selectedPFP === e ? 'pfpOptionSelected' : 'pfpOption',\n              onClick: () => {\n                setSelectedPFP(pfps[i]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pfp\",\n        children: [\"Profile Banner\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pfpOptions\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"\",\n            alt: \"\",\n            className: \"banner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Settings, \"BHvyH1BmQyR9B9ebBtFG1kHpB4s=\");\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["/Users/Agnesia/Projects/youtube-tutorials/Twitter-Starter/src/pages/Settings.js"],"names":["React","Link","useState","useRef","Input","pfp1","pfp2","pfp3","pfp4","pfp5","defaultImgs","Settings","pfps","selectedPFP","setSelectedPFP","inputFile","selectedFile","setSelectedFile","onBannerClick","current","click","changeHandler","event","img","target","files","URL","createObjectURL","map","e","i"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './Settings.css'\nimport { useState, useRef } from 'react'\nimport { Input } from 'web3uikit'\nimport pfp1 from '../images/pfp1.png'\nimport pfp2 from '../images/pfp2.png'\nimport pfp3 from '../images/pfp3.png'\nimport pfp4 from '../images/pfp4.png'\nimport pfp5 from '../images/pfp5.png'\nimport { defaultImgs } from '../defaultimgs'\n\nconst Settings = () => {\n  const pfps = [pfp1, pfp2, pfp3, pfp4, pfp5]\n  const [selectedPFP, setSelectedPFP] = useState()\n  const inputFile = useRef(null)\n  const [selectedFile, setSelectedFile] = useState(defaultImgs[1])\n  const onBannerClick = () => {\n    inputFile.current.click()\n  }\n  const changeHandler = (event) => {\n    const img = event.target.files[0]\n    setSelectedFile(URL.createObjectURL(img))\n  }\n\n  return (\n    <>\n      <div className='pageIdentify'>Settings</div>\n      <div className='settingsPage'>\n        <Input\n          label='Name'\n          name='NameChange'\n          width='100%'\n          labelBgColor='#141d26'\n          // onChange={(e) => setUsername(e.target.value)}\n        />\n        <Input\n          label='Bio'\n          name='bioChange'\n          width='100%'\n          labelBgColor='#141d26'\n          // onChange={(e) => setBio(e.target.value)}\n        />\n\n        <div className='pfp'>\n          Profile Images (Your NFTs)\n          <div className='pfpOptions'>\n            {pfps.map((e, i) => {\n              return (\n                <img\n                  src={e}\n                  alt=''\n                  className={\n                    selectedPFP === e ? 'pfpOptionSelected' : 'pfpOption'\n                  }\n                  onClick={() => {\n                    setSelectedPFP(pfps[i])\n                  }}\n                />\n              )\n            })}\n          </div>\n        </div>\n\n        <div className='pfp'>\n          Profile Banner\n          <div className='pfpOptions'>\n            <img src='' alt='' className='banner' />\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Settings\n"]},"metadata":{},"sourceType":"module"}