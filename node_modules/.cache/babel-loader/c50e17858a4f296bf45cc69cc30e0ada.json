{"ast":null,"code":"var _jsxFileName = \"/Users/Agnesia/Projects/Web-3.0-Twitter-Clone/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Home.css';\nimport { defaultImgs } from '../defaultimgs';\nimport { TextArea, Icon } from 'web3uikit';\nimport { useState, useRef } from 'react';\nimport TweetInFeed from '../components/TweetInFeed';\nimport { useMoralis, useWeb3ExecuteFunction } from 'react-moralis';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const {\n    Moralis\n  } = useMoralis();\n  const user = Moralis.User.current();\n  const contractProcessor = useWeb3ExecuteFunction();\n  const inputFile = useRef(null);\n  const [selectedFile, setSelectedFile] = useState();\n  const [theFile, setTheFile] = useState();\n  const [tweet, setTweet] = useState();\n\n  async function maticTweet() {\n    if (!tweet) return;\n    let img;\n\n    if (theFile) {\n      const data = theFile;\n      const file = new Moralis.File(data.name, data);\n      await file.saveIPFS();\n      img = file.ipfs();\n    } else {\n      img = 'No Img';\n    }\n\n    let options = {\n      contractAddress: '0xd9145CCE52D386f254917e481eB44e9943F39138',\n      functionName: 'addTweet',\n      abi: [{\n        inputs: [{\n          internalType: 'string',\n          name: 'tweetTxt',\n          type: 'string'\n        }, {\n          internalType: 'string',\n          name: 'tweetImg',\n          type: 'string'\n        }],\n        name: 'addTweet',\n        outputs: [],\n        stateMutability: 'payable',\n        type: 'function'\n      }],\n      params: {\n        tweetTxt: tweet,\n        tweetImg: img\n      },\n      msgValue: Moralis.Units.ETH(1)\n    };\n    await contractProcessor.fetch({\n      params: options,\n      onSuccess: () => {\n        saveTweet();\n      },\n      onError: error => {\n        console.log(error.data.message);\n      }\n    });\n  }\n\n  async function saveTweet() {\n    if (!tweet) return;\n    const Tweets = Moralis.Object.extend('Tweets');\n    const newTweet = new Tweets();\n    newTweet.set('tweetTxt', tweet);\n    newTweet.set('tweeterPfp', user.attributes.pfp);\n    newTweet.set('tweeterAcc', user.attributes.ethAddress);\n    newTweet.set('tweeterUserName', user.attributes.username);\n\n    if (theFile) {\n      const data = theFile;\n      const file = new Moralis.File(data.name, data);\n      await file.saveIPFS();\n      newTweet.set('tweetImg', file.ipfs());\n    }\n\n    await newTweet.save();\n    window.location.reload();\n  }\n\n  const onImageClick = () => {\n    inputFile.current.click();\n  };\n\n  const changeHandler = event => {\n    const img = event.target.files[0];\n    setTheFile(img);\n    setSelectedFile(URL.createObjectURL(img));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageIdentify\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTweet\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.attributes.pfp ? user.attributes.pfp : defaultImgs[0],\n          className: \"profilePic\",\n          alt: \"profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweetBox\",\n          children: [/*#__PURE__*/_jsxDEV(TextArea, {\n            label: \"\",\n            name: \"tweetTxtArea\",\n            value: \"GM World\",\n            type: \"text\",\n            onChange: e => setTweet(e.target.value),\n            width: \"95%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedFile,\n            className: \"tweetImg\",\n            alt: \"tweetImg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imgOrTweet\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"imgDiv\",\n              onClick: onImageClick,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file\",\n                ref: inputFile,\n                onChange: changeHandler,\n                style: {\n                  display: 'none'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Icon, {\n                fill: \"#1DA1F2\",\n                size: \"20\",\n                svg: \"image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweetOptions\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tweet\",\n                onClick: saveTweet,\n                children: \"Tweet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tweet\",\n                onClick: maticTweet,\n                style: {\n                  backgroundColor: '#8247e5'\n                },\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#ffffff\",\n                  size: \"20\",\n                  svg: \"matic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TweetInFeed, {\n        profile: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"18+E8SMrsUCEPqeJ1+zm5hNFqLU=\", false, function () {\n  return [useMoralis, useWeb3ExecuteFunction];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","defaultImgs","TextArea","Icon","useState","useRef","TweetInFeed","useMoralis","useWeb3ExecuteFunction","Home","Moralis","user","User","current","contractProcessor","inputFile","selectedFile","setSelectedFile","theFile","setTheFile","tweet","setTweet","maticTweet","img","data","file","File","name","saveIPFS","ipfs","options","contractAddress","functionName","abi","inputs","internalType","type","outputs","stateMutability","params","tweetTxt","tweetImg","msgValue","Units","ETH","fetch","onSuccess","saveTweet","onError","error","console","log","message","Tweets","Object","extend","newTweet","set","attributes","pfp","ethAddress","username","save","window","location","reload","onImageClick","click","changeHandler","event","target","files","URL","createObjectURL","e","value","display","backgroundColor"],"sources":["/Users/Agnesia/Projects/Web-3.0-Twitter-Clone/src/pages/Home.js"],"sourcesContent":["import React from 'react'\nimport './Home.css'\nimport { defaultImgs } from '../defaultimgs'\nimport { TextArea, Icon } from 'web3uikit'\nimport { useState, useRef } from 'react'\nimport TweetInFeed from '../components/TweetInFeed'\nimport { useMoralis, useWeb3ExecuteFunction } from 'react-moralis'\n\nconst Home = () => {\n  const { Moralis } = useMoralis()\n  const user = Moralis.User.current()\n  const contractProcessor = useWeb3ExecuteFunction()\n\n  const inputFile = useRef(null)\n  const [selectedFile, setSelectedFile] = useState()\n  const [theFile, setTheFile] = useState()\n  const [tweet, setTweet] = useState()\n\n  async function maticTweet() {\n    if (!tweet) return\n\n    let img\n    if (theFile) {\n      const data = theFile\n      const file = new Moralis.File(data.name, data)\n      await file.saveIPFS()\n      img = file.ipfs()\n    } else {\n      img = 'No Img'\n    }\n\n    let options = {\n      contractAddress: '0xd9145CCE52D386f254917e481eB44e9943F39138',\n      functionName: 'addTweet',\n      abi: [\n        {\n          inputs: [\n            {\n              internalType: 'string',\n              name: 'tweetTxt',\n              type: 'string',\n            },\n            {\n              internalType: 'string',\n              name: 'tweetImg',\n              type: 'string',\n            },\n          ],\n          name: 'addTweet',\n          outputs: [],\n          stateMutability: 'payable',\n          type: 'function',\n        },\n      ],\n      params: {\n        tweetTxt: tweet,\n        tweetImg: img,\n      },\n      msgValue: Moralis.Units.ETH(1),\n    }\n    await contractProcessor.fetch({\n      params: options,\n      onSuccess: () => {\n        saveTweet()\n      },\n      onError: (error) => {\n        console.log(error.data.message)\n      },\n    })\n  }\n\n  async function saveTweet() {\n    if (!tweet) return\n\n    const Tweets = Moralis.Object.extend('Tweets')\n\n    const newTweet = new Tweets()\n\n    newTweet.set('tweetTxt', tweet)\n    newTweet.set('tweeterPfp', user.attributes.pfp)\n    newTweet.set('tweeterAcc', user.attributes.ethAddress)\n    newTweet.set('tweeterUserName', user.attributes.username)\n\n    if (theFile) {\n      const data = theFile\n      const file = new Moralis.File(data.name, data)\n      await file.saveIPFS()\n      newTweet.set('tweetImg', file.ipfs())\n    }\n\n    await newTweet.save()\n    window.location.reload()\n  }\n\n  const onImageClick = () => {\n    inputFile.current.click()\n  }\n\n  const changeHandler = (event) => {\n    const img = event.target.files[0]\n    setTheFile(img)\n    setSelectedFile(URL.createObjectURL(img))\n  }\n  return (\n    <>\n      <div className='pageIdentify'>Home</div>\n      <div className='mainContent'>\n        <div className='profileTweet'>\n          <img\n            src={user.attributes.pfp ? user.attributes.pfp : defaultImgs[0]}\n            className='profilePic'\n            alt='profile'\n          />\n          <div className='tweetBox'>\n            <TextArea\n              label=''\n              name='tweetTxtArea'\n              value='GM World'\n              type='text'\n              onChange={(e) => setTweet(e.target.value)}\n              width='95%'\n            ></TextArea>\n            {selectedFile && (\n              <img src={selectedFile} className='tweetImg' alt='tweetImg'></img>\n            )}\n            <div className='imgOrTweet'>\n              <div className='imgDiv' onClick={onImageClick}>\n                <input\n                  type='file'\n                  name='file'\n                  ref={inputFile}\n                  onChange={changeHandler}\n                  style={{ display: 'none' }}\n                />\n                <Icon fill='#1DA1F2' size='20' svg='image'></Icon>\n              </div>\n              <div className='tweetOptions'>\n                <div className='tweet' onClick={saveTweet}>\n                  Tweet\n                </div>\n                <div\n                  className='tweet'\n                  onClick={maticTweet}\n                  style={{ backgroundColor: '#8247e5' }}\n                >\n                  <Icon fill='#ffffff' size='20' svg='matic'></Icon>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <TweetInFeed profile={false} />\n      </div>\n    </>\n  )\n}\n\nexport default Home\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}