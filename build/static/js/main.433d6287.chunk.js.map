{"version":3,"sources":["defaultimgs.js","images/golf.png","images/canoe.png","components/TweetInFeed.js","pages/Home.js","pages/Profile.js","pages/Settings.js","components/Sidebar.js","images/spaceshooter.jpeg","images/netflix.jpeg","images/academy.png","images/youtube.png","images/js.png","components/Rightbar.js","App.js","reportWebVitals.js","index.js"],"names":["defaultImgs","TweetInFeed","profile","useState","tweetArr","setTweetArr","useMoralis","Moralis","account","useEffect","a","Tweets","Object","extend","query","Query","equalTo","find","results","console","log","getTweets","map","e","className","src","attributes","tweeterPfp","tweeterUserName","slice","tweeterAcc","createdAt","toLocaleString","month","day","tweetTxt","tweetImg","fill","size","svg","reverse","Home","user","User","current","contractProcessor","useWeb3ExecuteFunction","inputFile","useRef","selectedFile","setSelectedFile","theFile","setTheFile","tweet","setTweet","data","file","File","name","saveIPFS","img","ipfs","options","contractAddress","functionName","abi","inputs","internalType","type","outputs","stateMutability","params","msgValue","Units","ETH","fetch","onSuccess","saveTweet","onError","error","message","newTweet","set","pfp","ethAddress","username","save","window","location","reload","alt","label","value","onChange","target","width","onClick","click","ref","event","files","URL","createObjectURL","style","display","backgroundColor","Profile","banner","to","bio","Settings","pfps","setPfps","selectedPFP","setSelectedPFP","setUsername","setBio","isAuthenticated","Web3Api","useMoralisWeb3Api","fetchNFTs","chain","address","getNFTs","mumbaiNFTs","images","result","url","JSON","parse","metadata","image","includes","replace","saveEdits","first","myDetails","labelBgColor","i","Sidebar","Rightbar","trends","spaceshooter","text","link","netflix","academy","js","youtube","prefixIcon","open","App","logOut","then","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","appId","serverUrl","document","getElementById"],"mappings":"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","file":"static/js/main.433d6287.chunk.js","sourcesContent":["export const defaultImgs = [\n  \"https://ipfs.moralis.io:2053/ipfs/QmNgA9MNWFfRaoKzBt21VghQopnKXBgVxzyGvv5qjsV4Vw/media/1\",\n  \"https://ipfs.moralis.io:2053/ipfs/QmNgA9MNWFfRaoKzBt21VghQopnKXBgVxzyGvv5qjsV4Vw/media/2\",\n];\n","export default __webpack_public_path__ + \"static/media/golf.cafe0ed3.png\";","export default __webpack_public_path__ + \"static/media/canoe.23df06ed.png\";","/* eslint-disable jsx-a11y/alt-text */\nimport React from 'react'\nimport './TweetInFeed.css'\nimport golf from '../images/golf.png'\nimport canoe from '../images/canoe.png'\nimport { defaultImgs } from '../defaultimgs'\nimport { Icon } from 'web3uikit'\nimport { useMoralis } from 'react-moralis'\nimport { useState, useEffect } from 'react'\nimport { get } from 'https-browserify'\n\nconst TweetInFeed = ({ profile }) => {\n  const [tweetArr, setTweetArr] = useState()\n  const { Moralis, account } = useMoralis()\n\n  useEffect(() => {\n    async function getTweets() {\n      try {\n        const Tweets = Moralis.Object.extend('Tweets')\n        const query = new Moralis.Query(Tweets)\n        if (profile) {\n          query.equalTo('tweeterAcc', account)\n        }\n        const results = await query.find()\n\n        setTweetArr(results)\n        console.log(results)\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    getTweets()\n  }, [profile])\n\n  return (\n    <>\n      {tweetArr\n        ?.map((e) => {\n          return (\n            <>\n              <div className='feedTweet'>\n                <img\n                  src={\n                    e.attributes.tweeterPfp\n                      ? e.attributes.tweeterPfp\n                      : defaultImgs[0]\n                  }\n                  className='profilePic'\n                />\n                <div className='completeTweet'>\n                  <div className='who'>\n                    {e.attributes.tweeterUserName.slice(0, 6)}\n                    <div className='accWhen'>\n                      {`${e.attributes.tweeterAcc.slice(\n                        0,\n                        4\n                      )}... ${e.attributes.tweeterAcc.slice(\n                        38\n                      )} • ${e.attributes.createdAt.toLocaleString('en-US', {\n                        month: 'short',\n                      })}\n                    ${e.attributes.createdAt.toLocaleString('en-US', {\n                      day: 'numeric',\n                    })}\n                    `}\n                    </div>\n                  </div>\n                  <div className='tweetContent'>\n                    {e.attributes.tweetTxt}\n                    {e.attributes.tweetImg && (\n                      <img\n                        src={e.attributes.tweetImg}\n                        className='tweetImg'\n                      ></img>\n                    )}\n                  </div>\n                  <div className='interactions'>\n                    <div className='interactionNums'>\n                      <Icon fill='#3f3f3f' size={20} svg='messageCircle' />\n                    </div>\n                    <div className='interactionNums'>\n                      <Icon fill='#3f3f3f' size={20} svg='star' />\n                      12\n                    </div>\n                    <div className='interactionNums'>\n                      <Icon fill='#3f3f3f' size={20} svg='matic' />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </>\n          )\n        })\n        .reverse()}\n\n      {/* <div className='feedTweet'>\n        <img src={defaultImgs[0]} className='profilePic' />\n        <div className='completeTweet'>\n          <div className='who'>\n            Juhizzz\n            <div className='accWhen'>0xfb5..6269 • 1h</div>\n          </div>\n          <div className='tweetContent'>\n            Nice day golfing today shot 73 (+2)\n            <img src={golf} className='tweetImg' />\n          </div>\n          <div className='interactions'>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='messageCircle' />\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='star' />\n              12\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='matic' />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='feedTweet'></div>\n\n      <div className='feedTweet'>\n        <img src={defaultImgs[0]} className='profilePic'></img>\n        <div className='completeTweet'>\n          <div className='who'>\n            Juhizzz\n            <div className='accWhen'>0xfb5..6269 · 1h</div>\n          </div>\n          <div className='tweetContent'>\n            is simply dummy text of the printing and typesetting industry. Lorem\n            Ipsum has been the industry's standard dummy text ever since the\n            1500s, when an unknown printer took a galley of type and scrambled\n            it to make a type specimen book. It has survived not only five\n            centuries, but also the leap into electronic typesetting, remaining\n            essentially un\n          </div>\n          <div className='interactions'>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='messageCircle' />\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='star' />\n              12\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='matic' />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className='feedTweet'>\n        <img src={defaultImgs[0]} className='profilePic'></img>\n        <div className='completeTweet'>\n          <div className='who'>\n            Juhizzz\n            <div className='accWhen'>0xfb5..6269 · 1h</div>\n          </div>\n          <div className='tweetContent'>\n            Thoughts on the new Coca-Cola banana 🥤🍌 flavor?\n          </div>\n          <div className='interactions'>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='messageCircle' />\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='star' />\n              12\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='matic' />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='feedTweet'>\n        <img src={defaultImgs[0]} className='profilePic'></img>\n        <div className='completeTweet'>\n          <div className='who'>\n            Juhizzz\n            <div className='accWhen'>0xfb5..6269 · 1h</div>\n          </div>\n          <div className='tweetContent'>\n            Love spending time on the water 🌊🌅\n            <img src={canoe} className='tweetImg'></img>\n          </div>\n          <div className='interactions'>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='messageCircle' />\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='star' />\n              12\n            </div>\n            <div className='interactionNums'>\n              <Icon fill='#3f3f3f' size={20} svg='matic' />\n            </div>\n          </div>\n        </div>\n      </div> */}\n    </>\n  )\n}\n\nexport default TweetInFeed\n","import React from 'react'\nimport './Home.css'\nimport { defaultImgs } from '../defaultimgs'\nimport { TextArea, Icon } from 'web3uikit'\nimport { useState, useRef } from 'react'\nimport TweetInFeed from '../components/TweetInFeed'\nimport { useMoralis, useWeb3ExecuteFunction } from 'react-moralis'\n\nconst Home = () => {\n  const { Moralis } = useMoralis()\n  const user = Moralis.User.current()\n  const contractProcessor = useWeb3ExecuteFunction()\n\n  const inputFile = useRef(null)\n  const [selectedFile, setSelectedFile] = useState()\n  const [theFile, setTheFile] = useState()\n  const [tweet, setTweet] = useState()\n\n  async function maticTweet() {\n    if (!tweet) return\n\n    let img\n    if (theFile) {\n      const data = theFile\n      const file = new Moralis.File(data.name, data)\n      await file.saveIPFS()\n      img = file.ipfs()\n    } else {\n      img = 'No Img'\n    }\n\n    let options = {\n      contractAddress: '0xd9145CCE52D386f254917e481eB44e9943F39138',\n      functionName: 'addTweet',\n      abi: [\n        {\n          inputs: [\n            {\n              internalType: 'string',\n              name: 'tweetTxt',\n              type: 'string',\n            },\n            {\n              internalType: 'string',\n              name: 'tweetImg',\n              type: 'string',\n            },\n          ],\n          name: 'addTweet',\n          outputs: [],\n          stateMutability: 'payable',\n          type: 'function',\n        },\n      ],\n      params: {\n        tweetTxt: tweet,\n        tweetImg: img,\n      },\n      msgValue: Moralis.Units.ETH(1),\n    }\n    await contractProcessor.fetch({\n      params: options,\n      onSuccess: () => {\n        saveTweet()\n      },\n      onError: (error) => {\n        console.log(error.data.message)\n      },\n    })\n  }\n\n  async function saveTweet() {\n    if (!tweet) return\n\n    const Tweets = Moralis.Object.extend('Tweets')\n\n    const newTweet = new Tweets()\n\n    newTweet.set('tweetTxt', tweet)\n    newTweet.set('tweeterPfp', user.attributes.pfp)\n    newTweet.set('tweeterAcc', user.attributes.ethAddress)\n    newTweet.set('tweeterUserName', user.attributes.username)\n\n    if (theFile) {\n      const data = theFile\n      const file = new Moralis.File(data.name, data)\n      await file.saveIPFS()\n      newTweet.set('tweetImg', file.ipfs())\n    }\n\n    await newTweet.save()\n    window.location.reload()\n  }\n\n  const onImageClick = () => {\n    inputFile.current.click()\n  }\n\n  const changeHandler = (event) => {\n    const img = event.target.files[0]\n    setTheFile(img)\n    setSelectedFile(URL.createObjectURL(img))\n  }\n  return (\n    <>\n      <div className='pageIdentify'>Home</div>\n      <div className='mainContent'>\n        <div className='profileTweet'>\n          <img\n            src={user.attributes.pfp ? user.attributes.pfp : defaultImgs[0]}\n            className='profilePic'\n            alt='profile'\n          />\n          <div className='tweetBox'>\n            <TextArea\n              label=''\n              name='tweetTxtArea'\n              value='GM World'\n              type='text'\n              onChange={(e) => setTweet(e.target.value)}\n              width='95%'\n            ></TextArea>\n            {selectedFile && (\n              <img src={selectedFile} className='tweetImg' alt='tweetImg'></img>\n            )}\n            <div className='imgOrTweet'>\n              <div className='imgDiv' onClick={onImageClick}>\n                <input\n                  type='file'\n                  name='file'\n                  ref={inputFile}\n                  onChange={changeHandler}\n                  style={{ display: 'none' }}\n                />\n                <Icon fill='#1DA1F2' size='20' svg='image'></Icon>\n              </div>\n              <div className='tweetOptions'>\n                <div className='tweet' onClick={saveTweet}>\n                  Tweet\n                </div>\n                <div\n                  className='tweet'\n                  onClick={maticTweet}\n                  style={{ backgroundColor: '#8247e5' }}\n                >\n                  <Icon fill='#ffffff' size='20' svg='matic'></Icon>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <TweetInFeed profile={false} />\n      </div>\n    </>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './Profile.css'\nimport { defaultImgs } from '../defaultimgs'\nimport TweetInFeed from '../components/TweetInFeed'\nimport { useMoralis } from 'react-moralis'\n\nconst Profile = () => {\n  const { Moralis } = useMoralis()\n  const user = Moralis.User.current()\n\n  return (\n    <>\n      <div className='pageIdentify'>Profile</div>\n      <img\n        src={user.attributes.banner ? user.attributes.banner : defaultImgs[1]}\n        alt=''\n        className='profileBanner'\n      />\n      <div className='pfpContainer'>\n        <img\n          src={user.attributes.pfp ? user.attributes.pfp : defaultImgs[0]}\n          alt=''\n          className='profilePFP'\n        />\n        <div className='profileName'>\n          {user.attributes.username.slice(0, 6)}\n        </div>\n        <div className='profileWallet'>{`${user.attributes.ethAddress.slice(\n          0,\n          4\n        )}...${user.attributes.ethAddress.slice(38)}`}</div>\n        <Link to='/settings'>\n          <div className='profileEdit'>Edit profile</div>\n        </Link>\n        <div className='profileBio'>{user.attributes.bio}</div>\n        <div className='profileTabs'>\n          <div className='profileTab'>Your Tweets</div>\n        </div>\n      </div>\n      <TweetInFeed profile={true} />\n    </>\n  )\n}\n\nexport default Profile\n","import React from 'react'\n// import { Link } from 'react-router-dom'\nimport './Settings.css'\nimport { useState, useRef, useEffect } from 'react'\nimport { Input } from 'web3uikit'\nimport { defaultImgs } from '../defaultimgs'\nimport { useMoralis, useMoralisWeb3Api } from 'react-moralis'\n\nconst Settings = () => {\n  const [pfps, setPfps] = useState([])\n  const [selectedPFP, setSelectedPFP] = useState()\n  const inputFile = useRef(null)\n  const [selectedFile, setSelectedFile] = useState(defaultImgs[1])\n  const [theFile, setTheFile] = useState()\n  const [username, setUsername] = useState()\n  const [bio, setBio] = useState()\n  const { Moralis, isAuthenticated, account } = useMoralis()\n  const Web3Api = useMoralisWeb3Api()\n\n  const resolveLink = (url) => {\n    if (!url || !url.includes('ipfs://')) return url\n    return url.replace('ipfs://', 'https://gateway.ipfs.io/ipfs/')\n  }\n\n  useEffect(() => {\n    const fetchNFTs = async () => {\n      const options = {\n        chain: 'mumbai',\n        address: account,\n      }\n\n      const mumbaiNFTs = await Web3Api.account.getNFTs(options)\n      const images = mumbaiNFTs.result.map((e) =>\n        resolveLink(JSON.parse(e.metadata)?.image)\n      )\n      setPfps(images)\n    }\n\n    fetchNFTs()\n  }, [isAuthenticated, account, Web3Api.account])\n\n  const onBannerClick = () => {\n    inputFile.current.click()\n  }\n  const changeHandler = (event) => {\n    const img = event.target.files[0]\n    setTheFile(img)\n    setSelectedFile(URL.createObjectURL(img))\n  }\n\n  const saveEdits = async () => {\n    const User = Moralis.Object.extend('_User')\n    const query = new Moralis.Query(User)\n    const myDetails = await query.first()\n\n    if (bio) {\n      myDetails.set('bio', bio)\n    }\n    if (selectedPFP) {\n      myDetails.set('pfp', selectedPFP)\n    }\n    if (username) {\n      myDetails.set('username', username)\n    }\n    if (theFile) {\n      const data = theFile\n      const file = new Moralis.File(data.name, data)\n      await file.saveIPFS()\n      myDetails.set('banner', file.ipfs())\n    }\n\n    await myDetails.save()\n    window.location.reload()\n  }\n\n  return (\n    <>\n      <div className='pageIdentify'>Settings</div>\n      <div className='settingsPage'>\n        <Input\n          label='Name'\n          name='NameChange'\n          width='100%'\n          labelBgColor='#141d26'\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        <Input\n          label='Bio'\n          name='bioChange'\n          width='100%'\n          labelBgColor='#141d26'\n          onChange={(e) => setBio(e.target.value)}\n        />\n\n        <div className='pfp'>\n          Profile Images (Your NFTs)\n          <div className='pfpOptions'>\n            {pfps.map((e, i) => {\n              return (\n                <img\n                  src={e}\n                  alt=''\n                  className={\n                    selectedPFP === e ? 'pfpOptionSelected' : 'pfpOption'\n                  }\n                  onClick={() => {\n                    setSelectedPFP(pfps[i])\n                  }}\n                />\n              )\n            })}\n          </div>\n        </div>\n\n        <div className='pfp'>\n          Profile Banner\n          <div className='pfpOptions'>\n            <img\n              src={selectedFile}\n              onClick={onBannerClick}\n              alt=''\n              className='banner'\n            />\n            <input\n              type='file'\n              name='file'\n              ref={inputFile}\n              onChange={changeHandler}\n              style={{ display: 'none' }}\n            />\n          </div>\n        </div>\n\n        <div className='save' onClick={() => saveEdits()}>\n          Save\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Settings\n","import React from 'react'\nimport './Sidebar.css'\nimport { Icon } from 'web3uikit'\nimport { Link } from 'react-router-dom'\nimport { useMoralis } from 'react-moralis'\nimport { defaultImgs } from '../defaultimgs'\n\nconst Sidebar = () => {\n  const { Moralis } = useMoralis()\n  const user = Moralis.User.current()\n\n  return (\n    <>\n      <div className='siderContent'>\n        <div className='menu'>\n          <div className='details'>\n            <Icon fill='#ffffff' size={33} svg='twitter' />\n          </div>\n\n          <Link to='/' className='link'>\n            <div className='menuItems'>\n              <Icon fill='#ffffff' size={33} svg='list' />\n              Home\n            </div>\n          </Link>\n\n          <Link to='/profile' className='link'>\n            <div className='menuItems'>\n              <Icon fill='#ffffff' size={33} svg='user' />\n              Profile\n            </div>\n          </Link>\n\n          <Link to='/settings' className='link'>\n            <div className='menuItems'>\n              <Icon fill='#ffffff' size={33} svg='cog' />\n              Setting\n            </div>\n          </Link>\n        </div>\n        <div className='details'>\n          <img\n            src={user.attributes.pfp ? user.attributes.pfp : defaultImgs[0]}\n            alt=''\n            className='profilePic'\n          />\n          <div className='profile'>\n            <div className='who'>{user.attributes.username.slice(0, 6)}</div>\n            <div className='accWhen'>{`${user.attributes.ethAddress.slice(\n              0,\n              4\n            )}...${user.attributes.ethAddress.slice(38)}`}</div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Sidebar\n","export default __webpack_public_path__ + \"static/media/spaceshooter.efac87b8.jpeg\";","export default __webpack_public_path__ + \"static/media/netflix.411c7033.jpeg\";","export default __webpack_public_path__ + \"static/media/academy.c7a89823.png\";","export default __webpack_public_path__ + \"static/media/youtube.afdf35e4.png\";","export default __webpack_public_path__ + \"static/media/js.33c19307.png\";","import React from 'react'\nimport './Rightbar.css'\nimport spaceshooter from '../images/spaceshooter.jpeg'\nimport netflix from '../images/netflix.jpeg'\nimport academy from '../images/academy.png'\nimport youtube from '../images/youtube.png'\nimport js from '../images/js.png'\nimport { Input } from 'web3uikit'\n\nconst Rightbar = () => {\n  const trends = [\n    {\n      img: spaceshooter,\n      text: 'Learn how to build a Web3 FPS game using unity...',\n      link: 'https://moralis.io/moralis-projects-learn-to-build-a-web3-space-fps-game/',\n    },\n    {\n      img: netflix,\n      text: \"The fisrt Moralis Project! Let's Netflix and chill...\",\n      link: 'https://moralis.io/moralis-projects-learn-to-build-a-web3-netflix-clone/',\n    },\n    {\n      img: academy,\n      text: 'Master DeFi in 2022. Start  at the Moralis Academy...',\n      link: 'https://academy.moralis.io/courses/defi-101',\n    },\n    {\n      img: js,\n      text: 'Become a Web3 Developer with just simple JS...',\n      link: 'https://academy.moralis.io/all-courses',\n    },\n    {\n      img: youtube,\n      text: 'Best youtube channel to learn about Web3...',\n      link: 'https://www.youtube.com/channel/UCgWS9Q3P5AxCWyQLT2kQhBw',\n    },\n  ]\n\n  return (\n    <>\n      <div className='rightbarContent'>\n        <Input\n          label='Search Twitter'\n          name='Search Twitter'\n          prefixIcon='search'\n          labelBgColor='#141d26'\n        ></Input>\n\n        <div className='trends'>\n          News For You\n          {trends.map((e) => {\n            return (\n              <>\n                <div className='trend' onClick={() => window.open(e.link)}>\n                  <img src={e.img} className='trendImg' alt='e.img' />\n                  <div className='trendText'>{e.text}</div>\n                </div>\n              </>\n            )\n          })}\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Rightbar\n","import React from 'react'\nimport { Routes, Route } from 'react-router-dom'\nimport Home from './pages/Home'\nimport Profile from './pages/Profile'\nimport Settings from './pages/Settings'\nimport Sidebar from './components/Sidebar'\nimport Rightbar from './components/Rightbar'\nimport './App.css'\nimport { useMoralis } from 'react-moralis'\nimport { ConnectButton, Icon } from 'web3uikit'\nconst App = () => {\n  const { isAuthenticated, Moralis } = useMoralis()\n\n  return (\n    <>\n      {isAuthenticated ? (\n        <div className='page'>\n          <div className='sideBar'>\n            <Sidebar />\n            <div\n              className='logout'\n              onClick={() => {\n                Moralis.User.logOut().then(() => {\n                  window.location.reload()\n                })\n              }}\n            >\n              Logout\n            </div>\n          </div>\n          <div className='mainWindow'>\n            <Routes>\n              <Route path='/' element={<Home />} />\n              <Route path='/profile' element={<Profile />} />\n              <Route path='/settings' element={<Settings />} />\n            </Routes>\n          </div>\n          <div className='rightBar'>\n            <Rightbar />\n          </div>\n        </div>\n      ) : (\n        <div className='loginPage'>\n          <Icon fill='#ffffff' size='40' svg='twitter'></Icon>\n          <ConnectButton />\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { BrowserRouter } from 'react-router-dom'\nimport { MoralisProvider } from 'react-moralis'\nimport { NotificationProvider } from 'web3uikit'\n\nReactDOM.render(\n  <React.StrictMode>\n    <MoralisProvider\n      appId='5uCWY3c1OBeGy7T0j7P3S7Xd6lNjO12BZUVugg3Q'\n      serverUrl='https://q5vu63ouwvpn.usemoralis.com:2053/server'\n    >\n      <NotificationProvider>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </NotificationProvider>\n    </MoralisProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}